<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>true</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text># --------------------------------------------------------------------------------
# SPDX-FileCopyrightText: 2025 Martin Jan KÃ¶hler
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
# SPDX-License-Identifier: GPL-3.0-or-later
#--------------------------------------------------------------------------------

import os 
import sys

directory_containing_this_script = os.path.realpath(os.path.dirname(__file__))
for name in (
    'KLayoutPluginUtils',   # deployed via Salt
    'klayout-plugin-utils'  # source code
):
    path = os.path.realpath(os.path.join(directory_containing_this_script,
                                         '..', '..', name, 'python'))
    if os.path.exists(path):
        sys.path.append(path)
sys.path.append(directory_containing_this_script)

from importlib import reload
import klayout_plugin_utils.debugging
import klayout_plugin_utils.editor_options
import klayout_plugin_utils.event_loop
import klayout_plugin_utils.object_description
import klayout_plugin_utils.str_enum_compat
import pin_tool_plugin
reload(klayout_plugin_utils.debugging)
reload(klayout_plugin_utils.editor_options)
reload(klayout_plugin_utils.event_loop)
reload(klayout_plugin_utils.object_description)
reload(klayout_plugin_utils.str_enum_compat)
reload(pin_tool_plugin)

import klayout_plugin_utils.debugging
klayout_plugin_utils.debugging.Debugging.init_debugging()

from pin_tool_plugin import PinToolPluginFactory
PinToolPluginFactory.instance = PinToolPluginFactory()
</text>
</klayout-macro>
